import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'fabric-loom' version '0.6-SNAPSHOT'
    id 'maven-publish'
    id "io.freefair.lombok" version "5.1.0"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id 'com.github.johnrengelman.shadow' version '4.0.2'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "${project.mod_version}-${project.minecraft_version}"
group = project.maven_group
// Private keys
Properties additionalProperties = new Properties()
if (file("extra.properties").exists()) {
    additionalProperties.load(file("extra.properties").newReader())
}

minecraft {
}

repositories {
    mavenCentral()
    maven { url 'https://masa.dy.fi/maven' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    //Fabric api
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"


    modImplementation "fi.dy.masa.malilib:malilib-fabric-1.16.2:${project.malilib_version}"

    modCompileOnly "io.github.prospector:modmenu:1.16.8"

    shadow 'com.google.code.findbugs:jsr305:3.0.0'

    shadow 'com.google.code.gson:gson:2.8.6'

    implementation "com.github.maowcraft:owo:${project.owo_version}"
    shadow "com.github.maowcraft:owo:${project.owo_version}"

    implementation "org.mariuszgromada.math:MathParser.org-mXparser:4.4.2"
    shadow "org.mariuszgromada.math:MathParser.org-mXparser:${project.mxparser_version}"

    implementation files('lib/suggester-1.1.2.jar')
//    include files('lib/suggester-1.1.2.jar')
    shadow files('lib/suggester-1.1.2.jar')

}

shadowJar {
    destinationDir = file("${buildDir}/tmp/allJar")
    configurations = [project.configurations.shadow]
    relocate 'com.softcorporation', 'io.github.darkkronicle.inscribe.shadow.com.softcorporation'
    relocate 'com.github.maowcraft', 'io.github.darkkronicle.inscribe.shadow.com.github.maowcraft'
    relocate 'org.mariuszgromada', 'io.github.darkkronicle.inscribe.shadow.org.mariusgromada'
    relocate 'com.google.code', 'io.github.darkkronicle.inscribe.shadow.com.google.code'

    from('.') {
        include 'LICENSE.txt'
    }
    minimize()
}

task remapShadowJar(type: RemapJarTask) {
    dependsOn shadowJar
    addNestedDependencies = false
    input = shadowJar.archivePath
}


build {
    dependsOn remapShadowJar
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}



curseforge {
    if (additionalProperties["curse_api_key"] != null || System.getenv("curse_api_key") != null) {
        if (additionalProperties["curse_api_key"] != null) {
            apiKey = additionalProperties["curse_api_key"]
        } else {
            apiKey = System.getenv("curse_api_key")
        }
        project {
            id = project.curseforge_id
            releaseType = "release"
            relations {
                requiredDependency "malilib"
            }
            addGameVersion "1.16.4"
            addGameVersion "1.16.5"
            addGameVersion "Java 8"
            addGameVersion "Fabric"
            mainArtifact(remapJar)
            afterEvaluate {
                uploadTask.dependsOn(remapJar)
            }
        }

    }
    options {
        forgeGradleIntegration = false
        javaVersionAutoDetect = false
    }
}
